var book ={
  topic: "JavaScript",
  fat: true
}
// 객체는 중괄호로 둘러쌓여 있다.
// topic 프로퍼티의 값은 자바스크립트
// fat 프로퍼티의 값은 true
// 닫는 중괄호는 객체 선언의 끝을 말한다.

book.topic
book["fat"]
book.author = "Flanagan";
book.contents = {};
// -> 자바스크립트
// -> 객체의 프로퍼티의 값에 접근하는 다른 방법
// -> 객체에 값을 할당하여 새로운 프로퍼티를 생성한다.
// -> {}는 프로퍼티가 빈 객체다.

var primes = [2, 3, 5 ,7];
primes[0]
// 2 -> 배열의 첫번째 원소를 알려준다.
primes.length
// 4 -> 배열에 몇개의 원소가 있는지 알려준다.
primes[primes.length-1]
// 7-> 배열의 마지막 원소 값을 알려준다.
primes[4] = 9;
// 배열에 새 원소 값을 추가한다. (해당 배열에)
primes[4] = 11;
// 해당 배열의 원소 값을 변경한다.
var empty = [];
// 원소가 없는 빈 배열을 언급
empty.length
// 0 -> 원소가 없으니 0이 나온다.

// 배열과 객체는 각각 원소와 프로퍼티의 값으로 배열과 객체를 가질 수 있다.
var point = [
  {x:0, y:0},
  {x:1, y:1}
];

var data = {
  trial1: [[1,2], [3,4]],
  trial2: [[2,3], [4,5]]
}

//자바스크립트는 사칙 연산을 지원한다.
// 일반적인 사칙연산
3 + 2
3 - 2
3 * 2
3 / 2
point[1].x - point[0].x 1
// 좀 더 복잡한 피연산자 작업도 가능하다.

"3" + "2" = 32
// + 연산자로 두 문자열을 이어 붙일 수 있다.

var count = 0
// 값을 정의한다.
count++;
// 값을 증가시킨다.
count--;
// 값을 감소시킨다.
count += 2;
// 값에 2를 더한다. count = count + 2와 같다.
count *= 3;
// 값에 3을 곱한다. count = count * 3과 같다.
count
// -> 6 으로 변수의 이름또한 표현식의 일종이다.

//등호와 관계 연산자는 두 값이 같거나 다른지, 작거나 큰지 등을 검사한다.
// 불리언으로 평가된다.

var x = 2, y = 3;
// 여기서 기호는 동등과 같은 비교검사의 개념이 아닌 할당의 개념이다.
x == y
// -> false 값이 같은지를 비교
x != y
// -> true 값이 다른지를 비교
x < y
// -> true 작은 지를 비교
x <= y
// -> ture 작거나 같은지를 비교
x > y
// -> false 큰 지를 비교
x >= y
// -> false 크거나 같은지를 비교
